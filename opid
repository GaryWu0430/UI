#!/usr/bin/python
# -*- coding: UTF-8 -*-
import sys
if sys.version_info[0] < 3:
    from Tkinter import *  # # Python 2.x
else:
    from tkinter import *  # # Python 3.x


class OPIDDialog:

    def __init__(self):
        self.root = Tk()
        self.maxLength = 8
        self.Result = False
        self.OperatorID = None
        self.Glueweight_1 = None
        self.Glueweight_2 = None
        self.Glueweight_3 = None
        self.Glueweight_4 = None
        self.setWindow()
        self.resizeWindow()
        self.createWidgets()

    def setWindow(self):
        screenwidth = self.root.winfo_screenwidth()
        #print "screenwidth" + str(screenwidth)
        screenheight = self.root.winfo_screenheight()
        self.w = screenwidth * 0.95
        self.h = screenheight * 0.95
        self.x = screenwidth * 0.01
        self.y = screenheight * 0.01
        #print u"w/25" + str(self.w / 25)
        self.fontSize = int(round(self.w / 40)) + 2
        #print self.fontSize
        self.root.title("Scan OPID")

    def resizeWindow(self):
        # 设置窗口大小注意：是x 不是*
        self.root.geometry('%dx%d+%d+%d' % (self.w, self.h, self.x, self.y))
        self.root.overrideredirect(0)
        # 设置窗口是否可以变化长/宽，False不可变，True可变，默认为True
        self.root.resizable(width=False, height=False)

    def createWidgets(self):
        # 创建Label
        self.labelOPID = Label(self.root, text="OPID: ", font=("Arial", self.fontSize))
        self.labelOPID.place(anchor="w", relx=0.1, rely=0.10)

        self.labelGlueweight1 = Label(self.root, text="1400A: ", font=("Arial", self.fontSize))
        self.labelGlueweight1.place(anchor="w", relx=0.05, rely=0.22)

        self.labelGlueweight2 = Label(self.root, text="6560A-1: ", font=("Arial", self.fontSize))
        self.labelGlueweight2.place(anchor="w", relx=0.05, rely=0.34)

        self.labelGlueweight3 = Label(self.root, text="6560A-2: ", font=("Arial", self.fontSize))
        self.labelGlueweight3.place(anchor="w", relx=0.05, rely=0.46)

        self.labelGlueweight4 = Label(self.root, text="6560A-3: ", font=("Arial", self.fontSize))
        self.labelGlueweight4.place(anchor="w", relx=0.05, rely=0.58)

        self.labelGlueweight5 = Label(self.root, text="6560A-4: ", font=("Arial", self.fontSize))
        self.labelGlueweight5.place(anchor="w", relx=0.05, rely=0.70)


        self.labelGlueweight6 = Label(self.root, text="1400B: ", font=("Arial", self.fontSize))
        self.labelGlueweight6.place(anchor="w", relx=0.5, rely=0.22)

        self.labelGlueweight7 = Label(self.root, text="6560B-1: ", font=("Arial", self.fontSize))
        self.labelGlueweight7.place(anchor="w", relx=0.5, rely=0.34)

        self.labelGlueweight8 = Label(self.root, text="6560B-2: ", font=("Arial", self.fontSize))
        self.labelGlueweight8.place(anchor="w", relx=0.5, rely=0.46)

        self.labelGlueweight9 = Label(self.root, text="6560B-3: ", font=("Arial", self.fontSize))
        self.labelGlueweight9.place(anchor="w", relx=0.5, rely=0.58)

        self.labelGlueweight10 = Label(self.root, text="6560B-4: ", font=("Arial", self.fontSize))
        self.labelGlueweight10.place(anchor="w", relx=0.5, rely=0.70)


        # 绑定创建StringVar() txtOPID
        self.txtOPID = StringVar()  # 创建Entry OPID
        self.txtOPID.trace("w", self.autoUpperCase)  # 内容自动转成大写

        self.txtGlueweight1 =StringVar()
        self.txtGlueweight1.trace("w", self.autoUpperCase)

        self.txtGlueweight2 =StringVar()
        self.txtGlueweight2.trace("w", self.autoUpperCase)

        self.txtGlueweight3 =StringVar()
        self.txtGlueweight3.trace("w", self.autoUpperCase)

        self.txtGlueweight4 =StringVar()
        self.txtGlueweight4.trace("w", self.autoUpperCase)

        self.txtGlueweight5 =StringVar()
        self.txtGlueweight5.trace("w", self.autoUpperCase)

        self.txtGlueweight6 =StringVar()
        self.txtGlueweight6.trace("w", self.autoUpperCase)

        self.txtGlueweight7 =StringVar()
        self.txtGlueweight7.trace("w", self.autoUpperCase)

        self.txtGlueweight8 =StringVar()
        self.txtGlueweight8.trace("w", self.autoUpperCase)

        self.txtGlueweight9 =StringVar()
        self.txtGlueweight9.trace("w", self.autoUpperCase)

        self.txtGlueweight10 =StringVar()
        self.txtGlueweight10.trace("w", self.autoUpperCase)


        
        def bindEvents(self):
            self.editOPID.bind('<Key-Return>', self.onKeyReturn)
            self.editGlueweight1.bind('<Key-Return>', self.onKeyReturn1)
            self.editGlueweight2.bind('<Key-Return>', self.onKeyReturn2)
            self.editGlueweight3.bind('<Key-Return>', self.onKeyReturn3)
            self.editGlueweight4.bind('<Key-Return>', self.onKeyReturn4)
            self.editGlueweight5.bind('<Key-Return>', self.onKeyReturn5)
            self.editGlueweight6.bind('<Key-Return>', self.onKeyReturn6)
            self.editGlueweight7.bind('<Key-Return>', self.onKeyReturn7)
            self.editGlueweight8.bind('<Key-Return>', self.onKeyReturn8)
            self.editGlueweight9.bind('<Key-Return>', self.onKeyReturn9)
            self.editGlueweight10.bind('<Key-Return>', self.onKeyReturn10)

        # 创建Entry editOPID
        self.editOPID = Entry(
            self.root,
            width=20,
            font=("Arial", self.fontSize),
            textvariable=self.txtOPID)
        self.editOPID.place(anchor="w", relx=0.25, rely=0.10)
        self.editOPID.focus_set()
        # 绑定敲Enter事件
        self.editOPID.bind('<Key-Return>', self.onKeyReturn)

        # 创建Entry Glueweight1
        self.editGlueweight1 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight1)
        self.editGlueweight1.place(anchor="w", relx=0.2, rely=0.22)
        self.editGlueweight1.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight1.bind('<Key-Return>', self.onKeyReturn1)
        
        # 创建Entry Glueweight2
        self.editGlueweight2 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight2)
        self.editGlueweight2.place(anchor="w", relx=0.2, rely=0.34)
        self.editGlueweight2.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight2.bind('<Key-Return>', self.onKeyReturn2)

        # 创建Entry Glueweight3
        self.editGlueweight3 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight3)
        self.editGlueweight3.place(anchor="w", relx=0.2, rely=0.46)
        self.editGlueweight3.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight3.bind('<Key-Return>', self.onKeyReturn3)

        # 创建Entry Glueweight4
        self.editGlueweight4 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight4)
        self.editGlueweight4.place(anchor="w", relx=0.2, rely=0.58)
        self.editGlueweight4.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight4.bind('<Key-Return>', self.onKeyReturn4)

        # 创建Entry Glueweight5
        self.editGlueweight5 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight5)
        self.editGlueweight5.place(anchor="w", relx=0.2, rely=0.70)
        self.editGlueweight5.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight5.bind('<Key-Return>', self.onKeyReturn5)
        
        # 创建Entry Glueweight6
        self.editGlueweight6 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight6)
        self.editGlueweight6.place(anchor="w", relx=0.65, rely=0.22)
        self.editGlueweight6.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight6.bind('<Key-Return>', self.onKeyReturn6)

        # 创建Entry Glueweight7
        self.editGlueweight7 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight7)
        self.editGlueweight7.place(anchor="w", relx=0.65, rely=0.34)
        self.editGlueweight7.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight7.bind('<Key-Return>', self.onKeyReturn7)

        # 创建Entry Glueweight8
        self.editGlueweight8 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight8)
        self.editGlueweight8.place(anchor="w", relx=0.65, rely=0.46)
        self.editGlueweight8.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight8.bind('<Key-Return>', self.onKeyReturn8)

        # 创建Entry Glueweight9
        self.editGlueweight9 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight9)
        self.editGlueweight9.place(anchor="w", relx=0.65, rely=0.58)
        self.editGlueweight9.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight9.bind('<Key-Return>', self.onKeyReturn9)

        # 创建Entry Glueweigh10
        self.editGlueweight10 = Entry(
            self.root,
            width=15,
            font=("Arial", self.fontSize),
            textvariable=self.txtGlueweight10)
        self.editGlueweight10.place(anchor="w", relx=0.65, rely=0.70)
        self.editGlueweight10.focus_set()
        # 绑定敲Enter事件
        self.editGlueweight10.bind('<Key-Return>', self.onKeyReturn10)

        # 创建Button OK
        self.btnOK = Button(
            self.root,
            text="OK",
            font=("Arial", self.fontSize),
            height=1,
            width=8,
            command=self.onBnClickedOK)
        self.btnOK.place(anchor="center", relx=0.3, rely=0.9)
        self.btnOK.bind('<Key-Return>', self.onKeyReturn)

        # 创建Button Cancel
        self.btnCancel = Button(
            self.root,
            text="Cancel",
            font=("Arial", self.fontSize),
            height=1,
            width=8,
            command=self.onBnClickedCancel)
        self.btnCancel.place(anchor="center", relx=0.7, rely=0.9)

        self.labelMessage = Label(self.root, text="", font=("Arial", self.fontSize - 2))
        self.labelMessage.place(anchor="w", relx=0.05, rely=0.80)
    


    def onBnClickedOK(self):
        content = self.editOPID.get()
        content1 = self.txtGlueweight1.get()
        content2 = self.txtGlueweight2.get()
        content3 = self.txtGlueweight3.get()
        content4 = self.txtGlueweight4.get()
        content5 = self.txtGlueweight5.get()
        content6 = self.txtGlueweight6.get()
        content7 = self.txtGlueweight7.get()
        content8 = self.txtGlueweight8.get()
        content9 = self.txtGlueweight9.get()
        content10 = self.txtGlueweight10.get()

        if len(content) == self.maxLength:
            self.Result = True
            self.OperatorID = content
            self.Glueweight_1 = content1
            self.Glueweight_2 = content2
            self.Glueweight_3 = content3
            self.Glueweight_4 = content4
            self.Glueweight_5 = content5
            self.Glueweight_6 = content6
            self.Glueweight_7 = content7
            self.Glueweight_8 = content8
            self.Glueweight_9 = content9
            self.Glueweight_10 = content10
            self.close_window()
        else:
            self.ShowMessage('OPID Should be 8 bits!')
        

    def onBnClickedCancel(self):
        content = self.editOPID.get()
        if len(content) < self.maxLength:
            self.ShowMessage('OPID Should be 8 bits!')
        else:
            self.close_window()
        
    def onKeyReturn(self, event):
        print("debug")
        if len(self.txtOPID.get()) == self.maxLength:
            self.editGlueweight1.focus_set()
        else:
            self.ShowMessage('OPID Should be 8 bits!')
        

    def onKeyReturn1(self, event):
        print("debug")
        self.editGlueweight2.focus_set()

    def onKeyReturn2(self, event):
        print("debug")
        self.editGlueweight3.focus_set()
    
    def onKeyReturn3(self, event):
        print("debug")
        self.editGlueweight4.focus_set()
    
    def onKeyReturn4(self, event):
        print("debug")
        self.editGlueweight5.focus_set()

    def onKeyReturn5(self, event):
        print("debug")
        self.editGlueweight6.focus_set()

    def onKeyReturn6(self, event):
        print("debug")
        self.editGlueweight7.focus_set()
    
    def onKeyReturn7(self, event):
        print("debug")
        self.editGlueweight8.focus_set()

    def onKeyReturn8(self, event):
        print("debug")
        self.editGlueweight9.focus_set()

    def onKeyReturn9(self, event):
        print("debug")
        self.editGlueweight10.focus_set()

    def onKeyReturn10(self, event):
        self.onBnClickedOK()

    def autoUpperCase(self, *arg):
        self.ShowMessage('')
        content = self.txtOPID.get().upper()
        if len(content) > self.maxLength:
            content = content[:-1]
        self.txtOPID.set(content)

    def ShowMessage(self, message, status=False):
        if status:
            self.labelMessage.configure(text=message, foreground="#005737")
        else:
            self.labelMessage.configure(text=message, foreground="RED")

    def close_window(self):
        self.root.destroy()

    def showDialog(self):
        self.root.mainloop()
        return self.Result

    def mainloop(self):
        self.root.mainloop()
        return self.Result


def main():
    app = OPIDDialog()  # 创建窗口对象的背景色
    # app.showDialog()                 # 进入消息循环
    if app.showDialog():
        print ('True')
    else:
        print ('False')


if __name__ == '__main__':
    main()
