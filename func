#!/usr/bin/env python
# -*- coding:utf-8 -*-
import threading
from func.Logger import Logger
import platform
import shutil
import serial
import glob
import os
import time
import binascii
import re


PROGRAM_VERSION = '1.0.0.3'
ret2 = ''
_TIM_Log_Path_ = "D:\\AOI\\result\\result.txt"
_TIM_Pic_Path_ = "D:\\AOI\\result\\"
_Upload_Path_ = "P:\\PASS"


class CCDWorker(threading.Thread):
    def __init__(self, form=None,timeout=1):
        threading.Thread.__init__(self)
        self.timeout = timeout
        self.result = None
        self.message = None
        self.form = form

        self.platform=platform.system() 
        
    def run(self):
        bu = 'PU11-QTMC-CAR'
        step = 'Handshake'
        Line = "A41"
        SN = self.form.sn
        print ('Serial_Number1=%s' % SN)
        SN2 = self.form.gluesn1
        print ('Serial_Number2=%s' % SN2)
        SN3 = self.form.gluesn2
        print ('Serial_Number3=%s' % SN3)
        ECU2 = ''
        print (ECU2)

        inputstring = 'SN=%s;$;Line=%s;$;BarCode=%s;$;BarCode=%s;$;OPID=%s'%(SN,Line,SN2,SN3,self.form.OPID)
        print (inputstring)
        _Station_ = 'INPUT'

        if inputstring.upper() != '':
            result = 'PASS'
            message = 'PASS'
            inputstring = 'LinkResult = PASS'
            self.form.AddItemList('Status', ' PASS' ,SN , SN2, SN3, u'Link PASS')
            if inputstring.upper() != '' :
                self.form.StopMainThread(result, message, inputstring)
                #self.Analaya_information(self.form.model_name,self.form.station_name)
            else:
                self.form.AddItemList('Routing_check', 'Routing_check FAIL' , '', '', '', u'Routing_check FAIL')
                self.form.StopMainThread(result, message, inputstring)
        else:
            message = 'FAIL'
            inputstring = 'LinkResult = FAIL'
            result = 'FAIL'
            self.form.AddItemList('Status', iResult , '', '', '', u'Link FAIL')
            self.form.StopMainThread(result, message, inputstring)

        
        
    def Analaya_information(self,model_name,station_name):

        message = 'FAIL'
        inputstring=''
        P = "Pass.jpeg"
        F = "Fail.jpeg"
        lengthA = ""
        lengthB = ""
        self.form.stringVar_program_version.set(PROGRAM_VERSION)
        start_time=time.time()
        # filepath=os.path.dir.name(os.path.realpath(__file__))
        Filename = max(glob.glob(r"D:\\AOI\\result\\*\\*.jpeg"), key=os.path.getmtime)
        filetxt = max(glob.glob(r"D:\\AOI\\result\\*.txt"), key=os.path.getmtime)
        if  P in Filename :
            line = max(glob.glob(r"D:\\AOI\\result\\PASS"), key=os.path.getmtime)
            with open(filetxt) as f:
                x = f.readline()
                res=x.split("=")[1]
                lengthA = res.split(",")[0]
                lengthB = res.split(",")[1]

        elif F in Filename:
            line = max(glob.glob(r"D:\\AOI\\result\\FAIL"), key=os.path.getmtime)
            with open(filetxt) as f:
                x = f.readline()
                res=x.split("=")[1]
                lengthA = res.split(",")[0]
                lengthB = res.split(",")[1]

        retstring=''
        src = os.listdir(line)
        if src!=[]:
            # for file in src:
            os.remove(Filename)
        i = 0
        while True:
            i+=1
            time.sleep(2)
            road = "D:\\AOI\\result\\"
            self.form.AddItemList( "Find Photo under %s"%Filename, str( i ) + " times" , "", "", "", "" )
            if  P in Filename :
                src = os.listdir(road+'PASS')
                if i == 3 :
                    src = os.listdir(road+'FAIL')
            elif F in Filename:
                src = os.listdir(road+'FAIL')
                if i == 3:
                    src = os.listdir(road+'PASS')
            if src!=[]: 
                for filename in src:
                    print ('File name in listdir: %s' % filename)
                    if filename.endswith('.jpeg') and 'PASS' in filename.upper():
                        #sourcefile = _TIM_Pic_Path_ + filename.strip('_')
                        sourcefile = _TIM_Pic_Path_ + 'PASS'
                        curDate = time.strftime("%Y%m%d", time.localtime())
                        curTime = time.strftime("%Y%m%d%H%M%S")
                        if not os.path.exists(_Upload_Path_ +os.sep+ curDate + os.sep + model_name + os.sep + self.form.station_name):
                            os.makedirs(_Upload_Path_ +os.sep+ curDate + os.sep + model_name + os.sep + self.form.station_name)
                        targetname = '%s_%s_%s.jpeg' % (self.form.sn.replace(":","_"), 'PASS', curTime)
                        targetfolder = _Upload_Path_ +os.sep+ curDate + os.sep + model_name + os.sep + self.form.station_name + os.sep 
                        print('Copying %s to %s...' % (sourcefile, targetfolder))
                        print ("sourcefile",sourcefile + targetname)
                        print ("targetfile",targetfolder)
                        shutil.copyfile(sourcefile +"\\" +P, targetfolder+targetname)
                        time.sleep(1)
                        #os.remove(sourcefile)
                        result = 'PASS'
                        #shutil.rmtree(sourcefile)
                        
                        break

                        
                    elif filename.endswith('.jpeg') and 'FAIL' in filename.upper():
                        self.form.AddItemList(" Find Fail Photo!!" , "", "", "", "","" )
                        sourcefile = _TIM_Pic_Path_ + 'FAIL'
                        curDate = time.strftime("%Y%m%d", time.localtime())
                        curTime = time.strftime("%Y%m%d%H%M%S")
                        targetname = '%s_%s_%s.jpeg' % (self.form.sn.replace(":","_"), 'FAIL', curTime)
                        targetfolder = _Upload_Path_ +os.sep+ curDate + os.sep + model_name + os.sep + self.form.station_name + os.sep 
                        shutil.copyfile(sourcefile + "\\" +F, targetfolder+targetname)
                        #os.remove(sourcefile)
                        result = 'FAIL'
                        #shutil.rmtree(sourcefile)
                        
                        break
                    else:
                        continue
                break
            else:
                time.sleep(2)
                continue
        else:
            print ('Can not find Photos, FAIL')
            result = 'FAIL'
        
        #Upload to Shopfloor  
        log_data = result
        Logger.Write( "\n\n" )
        Logger.Write( "TIM log data: %s\n" % log_data )
        inputstring = "OPID=%s##Result=%s##log_data%s##ProgramVersion=%s##PCName=%s##lengthA=%s##lengthB=%s##" % ( self.form.OPID, result, log_data, PROGRAM_VERSION, self.form.GetDataFromForm( "PCName" ),lengthA,lengthB ) 
        Logger.Write( 'UpdateToSF:' )
        Logger.Write( 'inputstring=%s\n' % inputstring )    
        Logger.MoveLogByResult( result )
        self.form.StopMainThread( result, 'SD Card Assemble CCDCheck', inputstring)

        
